<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope) {
  /* widget controller */
  var c = this;
	$rootScope.$on('selectNote', function(event,data){
		console.log('Listener caught NoteID: ' + $rootScope.noteID);
		// so basically with $rootScope it reponds to the emitted data from the Notes List
		c.server.get({
			action: 'getNote', // we wanna get the getNote action from Notes list
			noteID: $rootScope.noteID // with the $rootScope sys_id that it emitted
		}).then( // return a promise
			function(r){ // copy data fields into widget controller
				c.data.title = r.data.note.title;
				c.data.note = r.data.note.note;
				c.data.noteID = r.data.note.sys_id;
			});
	})
	
	c.updateNote = function(updateType){
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(
		function(response){
			$rootScope.noteID = c.data.noteID;
			$rootScope.$emit('refreshList', c.data.noteID);
		});
	}
	
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	// SO NOW, we can to write logic to respond to the getNote action from the client script
	if(input && input.noteID){ 
		// input object is the data object RECEIVED from the client script controller
		var note = new GlideRecord('x_snc_createnotes_note');
		if(note.get(input.noteID)){
			if(input.action == 'getNote'){
				data.note = {};
				$sp.getRecordDisplayValues(data.note,note,'title,note,sys_id');
				// now lets stuff those values into the data.note object so we can display em
			}
			else if(input.action == 'updateNote'){
				note.title = input.noteTitle;
				note.note = input.noteBody;
				note.update();
				// input object is received from the client script
				// GlideRecord update() method new values to an existing record to the db
			}
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-02 02:11:47</sys_created_on>
        <sys_id>740ba38f377823007595dc1873990e8a</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_740ba38f377823007595dc1873990e8a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-02 19:01:04</sys_updated_on>
        <template><![CDATA[<div class = "panel panel-default" ng-show="c.data.noteID">
  <!--
	ng-show: used to show/hide widget based on whether c.data.noteID has a value
	if no record selected in Notes Lsit widget, Notes Body c.data.noteID property
		has no value :)
-->
<!-- your widget template -->
  <div class = "panel-heading clearfix">
    <div class = "row">
      <div class = "col-md-12">
        <input class = "form-control" id = "note-title" ng-model = "c.data.title"
               ng-change = "c.updateNote('title')" ng-model-options = "{debounce:1000}"/>
      </div>     
    </div>
  </div>
  <div class = "panel-body">
    <textarea class = "form-control id = note-body" ng-model = "c.data.note"
              ng-change = "c.updateNote('body')" ng-model-options = "{debounce:1000}"> 
    </textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
